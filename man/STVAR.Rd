% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/STVARconstruction.R, R/miscS3methods.R,
%   R/plotMethods.R, R/printMethods.R
\name{STVAR}
\alias{STVAR}
\alias{logLik.stvar}
\alias{residuals.stvar}
\alias{summary.stvar}
\alias{plot.stvar}
\alias{print.stvar}
\title{Create a class 'stvar' object defining a reduced form or structural smooth transition VAR model}
\usage{
STVAR(
  data,
  p,
  M,
  d,
  params,
  weight_function = c("relative_dens", "logit"),
  cond_dist = c("Gaussian", "Student"),
  parametrization = c("intercept", "mean"),
  identification = c("reduced_form", "recursive", "heteroskedasticity"),
  AR_constraints = NULL,
  mean_constraints = NULL,
  B_constraints = NULL,
  calc_std_errors = FALSE
)

\method{logLik}{stvar}(object, ...)

\method{residuals}{stvar}(object, ...)

\method{summary}{stvar}(object, ..., digits = 2)

\method{plot}{stvar}(x, ...)

\method{print}{stvar}(x, ..., digits = 2, summary_print = FALSE)
}
\arguments{
\item{data}{a matrix or class \code{'ts'} object with \code{d>1} columns. Each column is taken to represent
a single times series. \code{NA} values are not supported. Ignore if defining a model without data is desired.}

\item{p}{a positive integer specifying the autoregressive order}

\item{M}{a positive integer specifying the number of regimes}

\item{d}{number of times series in the system, i.e. \code{ncol(data)}. This can be
used to define STVAR models without data and can be ignored if \code{data} is provided.}

\item{params}{a real valued vector specifying the parameter values.
Should have the form \eqn{\theta = (\phi_{1,0},...,\phi_{M,0},\varphi_1,...,\varphi_M,\sigma,\alpha,\nu)},
where
\itemize{
  \item{\eqn{\phi_{m,0} = } the \eqn{(d \times 1)} intercept (or mean) vector of the \eqn{m}th regime.}
  \item{\eqn{\varphi_m = (vec(A_{m,1}),...,vec(A_{m,p}))} \eqn{(pd^2 \times 1)}.}
  \item{\eqn{\sigma = (vech(\Omega_1),...,vech(\Omega_M)} \eqn{(Md(d + 1)/2 \times 1)}.}
  \item{\eqn{\alpha} contains the transition weights parameters}
  \item{\eqn{\nu > 2} is the degrees of freedom parameter that is included only if \code{cond_dist="Student"}.}
}
\describe{
  \item{For models with \code{weight_function="relative_dens"}:}{\eqn{\alpha = (\alpha_1,...,\alpha_{M-1})}
        \eqn{(M - 1 \times 1)}, where \eqn{\alpha_m} \eqn{(1\times 1), m=1,...,M-1} are the transition weight parameters.}
  \item{For models with \code{weight_function="logit"}:}{\eqn{\alpha = (\gamma_1,...,\gamma_M)} \eqn{((M-1)k\times 1)},
        where \eqn{\gamma_m} \eqn{(k\times 1), m=1,...,M-1} contains the logit-regression coefficients of the \eqn{m}th regime.}
}
Above, \eqn{\phi_{m,0}} is the intercept parameter, \eqn{A_{m,i}} denotes the \eqn{i}th coefficient matrix of the \eqn{m}th
mixture component, and \eqn{\Omega_{m}} denotes the error term covariance matrix of the \eqn{m}:th mixture component.
If \code{parametrization=="mean"}, just replace each \eqn{\phi_{m,0}} with regimewise mean \eqn{\mu_{m}}.
\eqn{vec()} is vectorization operator that stacks columns of a given matrix into a vector. \eqn{vech()} stacks columns
of a given matrix from the principal diagonal downwards (including elements on the diagonal) into a vector.}

\item{weight_function}{what type of transition weights should be used?}

\item{cond_dist}{specifies the conditional distribution of the model as \code{"Gaussian"} or \eqn{"Student"}.}

\item{parametrization}{\code{"intercept"} or \code{"mean"} determining whether the model is parametrized with intercept
parameters \eqn{\phi_{m,0}} or regime means \eqn{\mu_{m}}, m=1,...,M.}

\item{identification}{is it reduced form model or an identified structural model; if the latter, how is it identified?}

\item{calc_std_errors}{should approximate standard errors be calculated?}

\item{object}{object of class \code{'stvar'}.}

\item{...}{currently not used.}

\item{digits}{number of digits to be printed.}

\item{x}{an object of class \code{'stvar'}.}

\item{summary_print}{if set to \code{TRUE} then the print
will include log-likelihood and information criteria values.}
}
\value{
Returns an object of class \code{'stvar'} defining the specified reduced form or structural
 smooth transition VAR model. Can be used to work with other functions provided in \code{sstvars}.
}
\description{
\code{STVAR} creates a class \code{'stvar'} object that defines
 a reduced form or structural smooth transition VAR model
}
\details{
If data is provided, then also residuals are computed and included in the returned object.

The plot displays the time series together with estimated transition weights.
}
\section{Functions}{
\itemize{
\item \code{logLik(stvar)}: Log-likelihood method

\item \code{residuals(stvar)}: residuals method to extract Pearson residuals

\item \code{summary(stvar)}: summary method

\item \code{plot(stvar)}: plot method for class 'stvar'

\item \code{print(stvar)}: print method

}}
\section{About S3 methods}{

  If data is not provided, only the \code{print} and \code{simulate} methods are available.
  If data is provided, then in addition to the ones listed above, \code{predict} method is also available.
  See \code{?simulate.stvar} and \code{?predict.stvar} for details about the usage.
}

\examples{
# p=1, M=1, d=2, relative dens weight function
theta_112relg <- c(0.649526, 0.066507, 0.288526, 0.021767, -0.144024, 0.897103,
  0.601786, -0.002945, 0.067224)
mod112 <- STVAR(data=gdpdef, p=1, M=1, params=theta_112relg)

# p=1, M=2, d=2, relative dens weight function
theta_122relg <- c(0.734054, 0.225598, 0.705744, 0.187897, 0.259626, -0.000863,
  -0.3124, 0.505251, 0.298483, 0.030096, -0.176925, 0.838898, 0.310863, 0.007512,
  0.018244, 0.949533, -0.016941, 0.121403, 0.573269)
mod112 <- STVAR(data=gdpdef, p=1, M=2, params=theta_122relg)
}
\references{
\itemize{
   \item TO BE FILLED IN
 }
}
\seealso{
\code{\link{fitSTVAR}}, \code{\link{swap_parametrization}}, \code{\link{GIRF}}
}
