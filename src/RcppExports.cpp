// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Gaussian_densities_Cpp
arma::mat Gaussian_densities_Cpp(arma::mat obs, arma::mat means, arma::cube covmats, arma::mat alpha_mt);
RcppExport SEXP _sstvars_Gaussian_densities_Cpp(SEXP obsSEXP, SEXP meansSEXP, SEXP covmatsSEXP, SEXP alpha_mtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type means(meansSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type covmats(covmatsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_mt(alpha_mtSEXP);
    rcpp_result_gen = Rcpp::wrap(Gaussian_densities_Cpp(obs, means, covmats, alpha_mt));
    return rcpp_result_gen;
END_RCPP
}
// Gaussian_densities_const_Cpp
arma::vec Gaussian_densities_const_Cpp(arma::mat obs, arma::mat mean, arma::mat cholcovmat);
RcppExport SEXP _sstvars_Gaussian_densities_const_Cpp(SEXP obsSEXP, SEXP meanSEXP, SEXP cholcovmatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cholcovmat(cholcovmatSEXP);
    rcpp_result_gen = Rcpp::wrap(Gaussian_densities_const_Cpp(obs, mean, cholcovmat));
    return rcpp_result_gen;
END_RCPP
}
// get_mu_yt_Cpp
arma::mat get_mu_yt_Cpp(arma::mat obs, arma::mat all_phi0, arma::cube all_A, arma::mat alpha_mt);
RcppExport SEXP _sstvars_get_mu_yt_Cpp(SEXP obsSEXP, SEXP all_phi0SEXP, SEXP all_ASEXP, SEXP alpha_mtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type all_phi0(all_phi0SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type all_A(all_ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_mt(alpha_mtSEXP);
    rcpp_result_gen = Rcpp::wrap(get_mu_yt_Cpp(obs, all_phi0, all_A, alpha_mt));
    return rcpp_result_gen;
END_RCPP
}
// get_multisets_Cpp
arma::mat get_multisets_Cpp(int n, int d, arma::uword N);
RcppExport SEXP _sstvars_get_multisets_Cpp(SEXP nSEXP, SEXP dSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(get_multisets_Cpp(n, d, N));
    return rcpp_result_gen;
END_RCPP
}
// get_permanent_Cpp
double get_permanent_Cpp(const arma::mat& A);
RcppExport SEXP _sstvars_get_permanent_Cpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(get_permanent_Cpp(A));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sstvars_Gaussian_densities_Cpp", (DL_FUNC) &_sstvars_Gaussian_densities_Cpp, 4},
    {"_sstvars_Gaussian_densities_const_Cpp", (DL_FUNC) &_sstvars_Gaussian_densities_const_Cpp, 3},
    {"_sstvars_get_mu_yt_Cpp", (DL_FUNC) &_sstvars_get_mu_yt_Cpp, 4},
    {"_sstvars_get_multisets_Cpp", (DL_FUNC) &_sstvars_get_multisets_Cpp, 3},
    {"_sstvars_get_permanent_Cpp", (DL_FUNC) &_sstvars_get_permanent_Cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_sstvars(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
